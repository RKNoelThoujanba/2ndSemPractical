
<html>
        <head>
            <title> insert </title>  
            <link rel="stylesheet" type="text/css" href="Assignment-Style.css">
        </head>

        <body>
            AIM: To insert a user specified value to an array
            <br>
            <br>

            THEORY: <br>
            In C, the size of an array is fixed. In order to achieve a dynamic size array, we allocate the array on the heap and then when extra space is needed, we make a new array with the extra space, copy the elements from the existing array to the new array and then free the old array.
            However, in this experiment, we shall take a stack allocated array of size ARR_MAX_SZ = 512. We shall accompany this array with a user supplied value of n which indicates how many elements are currently in the array.<br>
            As for insertion, we shall take a user supplied insertion index. We then move all the elements, starting from the insertion index to the right by one unit. We then set the element at the insertion index to the element supplied by the user. We then add 1 to n to indicate that a new element has been inserted.
            <br>
            <br>
            <br>
            ALGORITHM: <br> <br>
            <ol>
                <li>Start</li>
<li>Input n</li>
<li>Initialize an Array arr of size n (Zero based indexing) </li>
<li>i = 0</li>
<li>while i &lt; n repeat septs 6 and 7</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;Input arr[i]</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;i = i + 1</li>
<li>Input insertionIndex, insertionElement</li>
<li>i = n - 1</li>
<li>while i &gt;= ininsertionIndex repeat steps 11 and 12</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;arr[i + 1] = arr[i]</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;i = i - 1</li>
<li>arr[insertionIndex] = insertionElement</li>
<li>n = n + 1</li>
<li>while i &lt; n repeat steps 16 and 17</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;Print arr[i]</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;i = i + 1</li>
<li>Stop</li>

            </ol>
        </body>
</html>
    